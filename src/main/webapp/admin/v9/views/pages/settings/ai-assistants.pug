extends ../../partials/layout

block content

    script.
        var aiAssistantsDataTable;

        var fieldsWereSet = false;
        var hideOnCreate = [];
        var hideOnEdit = [];

        let url = "/admin/rest/ai/assistant-definition/";

        window.domReady.add(function () {

            var tabs = [
                {id: 'basic', title: '[[\#{datatable.tab.basic}]]', selected: true},
                {id: 'action', title: '[[\#{editor.form.action}]]'},
                {id: 'provider', title: '[[\#{components.ai_assistants.provider}]]'},
                {id: 'instructions', title: '[[\#{components.ai_assistants.instruction_tab}]]'},
                {id: 'advanced', title: '[[\#{datatable.tab.advanced}]]'}
            ]

            var columns = [(${layout.getDataTableColumns('sk.iway.iwcm.components.ai.jpa.AssistantDefinitionEntity')})];

            for(let i = 0; i < columns.length; i++) {
                var columnClassName = columns[i]?.className;
                if(columnClassName == undefined || columnClassName == null) {
                    columnClassName = "";
                }

                if(columnClassName.indexOf("hideOnCreate") != -1) {
                    hideOnCreate.push(columns[i].data);
                    columnClassName = columnClassName.replace("hideOnCreate", "");
                }

                if(columnClassName.indexOf("hideOnEdit") != -1) {
                    hideOnEdit.push(columns[i].data);
                    columnClassName = columnClassName.replace("hideOnEdit", "");
                }

                columns[i].className = columnClassName;
            }

            aiAssistantsDataTable = WJ.DataTable({
                url: "/admin/rest/ai/assistant-definition/",
                columns: columns,
                serverSide: true,
                tabs: tabs,
                fetchOnCreate: true,
                fetchOnEdit: true
            });

            var eventsBinded = false;
            aiAssistantsDataTable.EDITOR.on( 'open', function ( e, data, action ) {
                if (eventsBinded==false) {
                    $("#DTE_Field_provider").on("change", function() {
                        changeFieldsVisibility($(this).val(), action);
                        //do not do this, it will erase value on edit existing entity $("#DTE_Field_model").val("");
                    });
                    eventsBinded = true;
                }
            });

            function changeFieldsVisibility(provider, action) {
                console.log("provider: " + provider);
                console.log("action: " + action);

                $.ajax({
                    type: "GET",
                    url: url + "provider-fields",
                    data: {
                        "provider": provider,
                        "action": action
                    },
                    success: function(res)
                    {
                        var toShow = Object.values(res);

                        if("create" == action) {
                            hideOnCreate.forEach(function(fieldName) {
                                if(toShow.includes(fieldName)) {
                                    aiAssistantsDataTable.EDITOR.field(fieldName).show();
                                } else {
                                    aiAssistantsDataTable.EDITOR.field(fieldName).hide();
                                }
                            });
                        } else if("edit" == action) {
                            hideOnEdit.forEach(function(fieldName) {
                                if(toShow.includes(fieldName)) {
                                    aiAssistantsDataTable.EDITOR.field(fieldName).show();
                                } else {
                                    aiAssistantsDataTable.EDITOR.field(fieldName).hide();
                                }
                            });
                        }
                    },
                    error: function(xhr, ajaxOptions, thrownError) {

                    }
                });
            }
        });

    style.
        div.DTE_Field_Name_instructions label { display: none; }
        textarea.textarea-code { white-space: pre-line !important; }
        label[for='DTE_Field_translatedDescription'] { visibility: hidden; }
        div.DTE_Field_Name_translatedDescription div.form-group-tooltip { display: none; }

    <table class="datatableInit table"></table>